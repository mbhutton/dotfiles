# Brewfile describing packages and casks to install.
# Temporarily unwanted packages are disabled with `if false` rather than commenting to allow easy sorting.
# Refer to tapped formulae by their fully qualified name, to avoid using an older core version (e.g. for tart).
#   E.g. 'tap "foo/bar"', then 'brew "foo/bar/baz"'

# ______________________________________________________________________________
# General packages
# ______________________________________________________________________________

brew "atool"              # Tools for archive files (zip,tar etc) like 'als', 'aunpack'
brew "atuin"              # Shell history backed by sqlite
brew "bat"                # Modern 'cat'
brew "bats-core"          # Testing for shell scripts and shell configuration
brew "bottom"             # Modern 'top', 'btm' command
brew "broot"              # Efficient directory navigation
brew "chezmoi"            # Dot files manager to bootstrap and manage dev environment
brew "choose-rust"        # Human-friendly and fast alternative to cut and (sometimes) awk. 'choose' command
brew "dua-cli"            # Disk usage analyzer: 'dua' binary. Alt: 'yazi' then ',S'
brew "duf"                # Modern 'df'
brew "dust"               # Modern 'du'
brew "eget"               # Install prebuilt binaries from GitHub
brew "fd"                 # Modern alternative to 'find'
brew "fzf"                # Fuzzy finder
brew "gh"                 # GitHub CLI, with Copilot
brew "git-absorb"         # Git workflow tool: "git commit --fixup, but automatic"
brew "git-delta"          # Modern diff, 'delta' command
brew "hledger"            # Plain text accounting, inspired by ledger, in Haskell
brew "hyperfine"          # Benchmarking
brew "jq"                 # Command-line JSON processor. Used by yazi
brew "just"               # Simple task runner. Used within git projects, including dotfiles
brew "lazydocker"         # Docker TUI
brew "lazygit"            # Efficient Git TUI
brew "lsd"                # Modern 'ls'
brew "mdcat"              # Show markdown documents on text terminals
brew "neovim"             # Modern 'vim'. Also used from VS Code as backend
brew "nushell"            # Modern shell with structured data pipelines. Replaces 'jq'. Overrides common shell commands
brew "pandoc"             # Format converter. Used in linkshift
brew "parallel"           # Run tasks in parallel. Used for updating multiple repos.
brew "ripgrep"            # Modern 'grep'. Note: required by LazyVim `opt.grepprg`
brew "ruff"               # Python linter/formatter. Python projects use venv version, but a CLI copy is useful
brew "sd"                 # Intuitive find & replace for CLI
brew "shellcheck"         # Static analysis of shell files. Note: validate zsh as bash.
brew "shfmt"              # Formatter for shell files
brew "starship"           # Terminal prompt
brew "stylua"             # Formatter for Lua code
brew "tig"                # Git TUI
brew "tlrc"               # Rust client for tldr (help pages for CLI tools)
brew "tmux"               # Terminal multiplexer
brew "uv"                 # Python package and project manager
brew "wget"               # Required by mason.nvim
brew "yazi"               # Terminal file manager
brew "yt-dlp"             # Watch offline
brew "zoxide"             # Augments 'cd'

{{ if .mh.useRuby }}
# Packages for building Ruby in mise on macOS. (Linux uses APT packages instead)
brew "coreutils"
brew "gmp"
brew "libyaml"
brew "openssl@3"
brew "zlib"
# Ruby building section ends
{{ end }}

{{ if .mh.isMacHost }}
# MacOS host section starts (packages to skip on virtual machines)
tap "cirruslabs/cli"
brew "cirruslabs/cli/tart"            # Manage macOS/Linux VMs. Note: full name required to avoid old brew core 'tart'.
cask "docker"                         # Docker Desktop. Does not work in macOS guest VM
cask "karabiner-elements"             # Keyboard customizer. Avoid having nested keyboard mappings between host/VM. TODO:configure for tart/UTM windows
brew "mas"                            # Manage macOS App Store apps. App Store not yet usable on guest machines.
# MacOS host section ends
{{ end }}


# Casks: Development and productivity
cask "alt-tab"                        # Window switching
{{ if .mh.useGitX -}}
cask "gitx"                           # Git UI with very legible commit graph
{{ end -}}
cask "iterm2"                         # Replacement for Terminal.app with more features
cask "shortcat"                       # Easymotion-like macOS GUI navigation

{{ if .mh.useEmacs }}
# Emacs section starts
tap "homebrew/services"                 # To manage the emacs-plus service
tap "d12frosted/emacs-plus"
brew "d12frosted/emacs-plus/emacs-plus@29", args: ["--with-native-comp", "--with-elrumo1-icon"]

# Emacs dependencies which `brew bundle cleanup --global --force` otherwise tries to uninstall.
# These need to be listed explicitly as a workaround for
#   https://github.com/Homebrew/homebrew-bundle/issues/1246
# If the above issue gets abandoned, consider generating a separate Brewfile
# containing all formulae listed via 'brew deps emacs-plus@foo' (where foo is the required version)
brew "coreutils" # Listed as a build dependency for emacs-plus, but actually required at runtime during session recovery
brew "gnutls"
brew "jansson"
brew "jpeg"
brew "libevent"
brew "libgccjit"
brew "libnghttp2"
brew "librsvg"
brew "libtasn1"
brew "nettle"
brew "p11-kit"
brew "unbound"
brew "zlib"

cask "mactex"    # LaTeX. Notes: slow installer; alters /etc/paths.d. TODO: replace with lightweight alternative

# Prose fonts for use in Emacs
cask "font-comic-neue"                 # For unserious prose
cask "font-sf-pro"                     # Apple system font
# Emacs section ends
{{ end }}

# Other Fonts
cask "font-hack-nerd-font"             # Fonts with support for icons, used by 'lsd'
cask "font-source-code-pro"

# 'choose-gui'
# - It currently generates garbage output in the terminal.
# - It works fairly well in the background with Shortcuts.app, which is why it's installed here.
# - It conflicts with 'choose-rust', hence leaving it unlinked.
# - Call it using the 'mh-choose-gui' wrapper defined in this repo.
brew "choose-gui", link: false
