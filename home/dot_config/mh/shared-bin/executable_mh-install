#!/bin/bash
# shellcheck disable=SC1091  # Don't follow sources

# Installs core software, taking into account desired state

function fail {
  echo "$*" >&2
  exit 1
}

function assert_function {
  type -t "$1" >/dev/null 2>&1 || fail "Required function not found: $1"
}

function hl { mh-horizontal-line; }

# Check preconditions
[[ -n "$HOME" ]] || fail "HOME is not set"
[[ -n "$USER" ]] || fail "USER is not set"
for cmd in curl git zsh; do
command -v "$cmd" >/dev/null || fail "$cmd is not installed or not in PATH"
done
[[ -n "$MH_CHEZMOI_LOADED_VERSION" ]] \
|| fail "Zsh config not properly loaded. \
(Env var MH_CHEZMOI_LOADED_VERSION not set.) \
Suggestion: 'chezmoi init ...' if not already, and run this script inside 'zsh -i'"

source_dir="$(dirname "${BASH_SOURCE[0]}")"
impl_dir="${source_dir}/mh-install.d"

# Load array of desired components
assert_function mh-parse-desired
COMPONENTS_PATH="${HOME}/.config/mh/desired-state/components"
[[ -f "$COMPONENTS_PATH" ]] || fail "Desired components file not found: $COMPONENTS_PATH"
COMPONENTS_ARRAY=()
if [[ -f "$COMPONENTS_PATH" ]]; then
  while IFS='' read -r line; do COMPONENTS_ARRAY+=("$line"); done < <(mh-parse-desired < "$COMPONENTS_PATH")
fi

hl
echo "Checking functions for each of ${COMPONENTS_ARRAY[*]}..."
# TODO rename all 'impl' to 'component'
for impl in "${COMPONENTS_ARRAY[@]}"; do
  # shellcheck disable=SC1090
  source "${impl_dir}/impl-${impl}.sh" || fail "Implementation not found for component '$impl'"
  assert_function noun_for_"${impl}"
  assert_function asserts_for_"${impl}"
  assert_function install_or_update_"${impl}"
  assert_function doctor_"${impl}"
done

hl
echo "Updating or installing software ðŸš€..."
for impl in "${COMPONENTS_ARRAY[@]}"; do
  # shellcheck disable=SC1090
  hl
  asserts_for_"${impl}" || fail "Failed pre-install checks for ${impl} ðŸ˜¢ðŸŽ»"
  echo "Updating/installing $(noun_for_"${impl}")..."
  install_or_update_"${impl}"
  echo -n
  echo -n >&2
done

hl
echo "The doctor will see you now ðŸ©º..."
for impl in "${COMPONENTS_ARRAY[@]}"; do
  # shellcheck disable=SC1090
  hl
  noun="$(noun_for_"${impl}")"
  echo "Checking state of ${noun}..."
  doctor_"${impl}"
  echo -n
  echo -n >&2
done
hl

